# trigger:
#   branches:
#     include:
#       - main
#   paths:
#     exclude:
#       - azure-pipelines.yaml

# pr:
#   branches:
#     include:
#       - main
#   paths:
#     exclude:
#       - azure-pipelines.yaml

# pool:
#   vmImage: 'ubuntu-latest'

# stages:
#   - stage: Build
#     displayName: 'Build Stage'
#     jobs:
#       - job: Build
#         displayName: 'Build Job'
#         steps:
#           - task: NodeTool@0
#             displayName: 'Use Node 20.x'
#             inputs:
#               versionSpec: 20.x

#           - script: npm install
#             displayName: 'npm install'

#           - script: npm run build
#             displayName: 'run build'

#           - task: ArchiveFiles@2
#             displayName: 'Archive Files'
#             inputs:
#               rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
#               includeRootFolder: false
#               archiveType: 'zip'
#               archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
#               replaceExistingArchive: true

#           - task: PublishBuildArtifacts@1
#             displayName: 'Publish Artifact: drop'
#             inputs:
#               PathtoPublish: '$(Build.ArtifactStagingDirectory)/build.zip'
#               ArtifactName: 'drop'

#   - stage: DeployToDev
#     displayName: 'Deploy to Dev'
#     dependsOn: Build
#     condition: succeeded()
#     jobs:
#       - deployment: Dev
#         displayName: 'Deploy to Dev'
#         environment: 'dev'
#         strategy:
#           runOnce:
#             deploy:
#               steps:
#                 - download: current
#                   artifact: drop

#                 - task: AzureRmWebAppDeployment@4
#                   displayName: 'Deploy to Dev Web App'
#                   inputs:
#                     ConnectionType: 'AzureRM'
#                     azureSubscription: 'Free Trial (c76eba7d-3791-4b1a-ac0a-e3914e169a45)'
#                     appType: 'webAppLinux'
#                     WebAppName: 'react-web-app-1'
#                     packageForLinux: '$(Pipeline.Workspace)/drop/build.zip'
#                     RuntimeStack: 'NODE|20-lts'

#                 - script: |
#                     npm install -g pm2
#                     pm2 serve /home/site/wwwroot --no-daemon
#                   displayName: 'Start PM2 to Serve Dev Web App'

#   - stage: DeployToProduction
#     displayName: 'Deploy to Production'
#     dependsOn: DeployToDev
#     condition: succeeded()
#     jobs:
#       - deployment: Production
#         displayName: 'Deploy to Production'
#         environment: 'production'
#         strategy:
#           runOnce:
#             deploy:
#               steps:
#                 - script: echo "Waiting for approval before deploying to Production"

#                 - download: current
#                   artifact: drop

#                 - task: AzureRmWebAppDeployment@4
#                   displayName: 'Deploy to Production Web App'
#                   inputs:
#                     ConnectionType: 'AzureRM'
#                     azureSubscription: 'Free Trial (c76eba7d-3791-4b1a-ac0a-e3914e169a45)'
#                     appType: 'webAppLinux'
#                     WebAppName: 'react-web-app-production'
#                     packageForLinux: '$(Pipeline.Workspace)/drop/build.zip'
#                     RuntimeStack: 'NODE|20-lts'

#                 - script: |
#                     npm install -g pm2
#                     pm2 serve /home/site/wwwroot --no-daemon
#                   displayName: 'Start PM2 to Serve Production Web App'

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yaml

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yaml

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: Build
        displayName: 'Build Job'
        steps:
          - task: NodeTool@0
            displayName: 'Use Node 20.x'
            inputs:
              versionSpec: 20.x

          - script: npm install
            displayName: 'npm install'

          - script: npm run build
            displayName: 'run build'

          - task: ArchiveFiles@2
            displayName: 'Archive Files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/build.zip'
              ArtifactName: 'drop'

  - stage: DeployToDev
    displayName: 'Deploy to Dev'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Dev
        displayName: 'Deploy to Dev'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: AzureRmWebAppDeployment@4
                  displayName: 'Deploy to Dev Web App'
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Free Trial (c76eba7d-3791-4b1a-ac0a-e3914e169a45)'
                    appType: 'webAppLinux'
                    WebAppName: 'react-web-app-1'
                    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                    RuntimeStack: 'NODE|20-lts'

  # - stage: DeployToProduction
  #   displayName: 'Deploy to Production'
  #   dependsOn: DeployToDev
  #   condition: succeeded()
  #   jobs:
  #     - deployment: Production
  #       displayName: 'Deploy to Production'
  #       environment: 'production'
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - script: echo "Waiting for approval before deploying to Production"

  #               - download: current
  #                 artifact: drop

  #               - task: AzureRmWebAppDeployment@4
  #                 displayName: 'Deploy to Production Web App'
  #                 inputs:
  #                   ConnectionType: 'AzureRM'
  #                   azureSubscription: 'Free Trial (c76eba7d-3791-4b1a-ac0a-e3914e169a45)'
  #                   appType: 'webAppLinux'
  #                   WebAppName: 'react-web-app-production'
  #                   packageForLinux: '$(Pipeline.Workspace)/drop/build.zip'
  #                   RuntimeStack: 'NODE|20-lts'
