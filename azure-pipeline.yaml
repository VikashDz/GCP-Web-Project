# trigger:
#   branches:
#     include:
#       - main
#   paths:
#     exclude:
#       - azure-pipelines.yaml

# pr:
#   branches:
#     include:
#       - main
#   paths:
#     exclude:
#       - azure-pipelines.yaml

# pool:
#   vmImage: 'ubuntu-latest'

# stages:
# - stage: Build
#   displayName: 'Build Stage'
#   jobs:
#   - job: Build
#     displayName: 'Build Job'
#     steps:
#     - task: NodeTool@0
#       displayName: 'Use Node 20.x'
#       inputs:
#         versionSpec: 20.x

#     - task: Npm@1
#       displayName: 'npm install'
#       inputs:
#         command: 'install'
#         workingDir: ''
#         verbose: false

#     - task: Npm@1
#       displayName: 'run build'
#       inputs:
#         command: custom
#         workingDir: ''
#         verbose: false
#         customCommand: 'run build'

#     - task: ArchiveFiles@2
#       displayName: 'Archive Files'
#       inputs:
#         rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
#         includeRootFolder: false
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
#         replaceExistingArchive: true
#         verbose: true
#         quiet: true

#     - task: PublishBuildArtifacts@1
#       displayName: 'Publish Artifact: drop'
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)/build.zip'
#         ArtifactName: 'drop'


# =====================================================================================================================================
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yaml

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - azure-pipelines.yaml

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: NodeTool@0
      displayName: 'Use Node 20.x'
      inputs:
        versionSpec: 20.x

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        command: 'install'
        workingDir: ''
        verbose: false

    - task: Npm@1
      displayName: 'run build'
      inputs:
        command: custom
        workingDir: ''
        verbose: false
        customCommand: 'run build'

    - task: ArchiveFiles@2
      displayName: 'Archive Files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/build.zip'
        replaceExistingArchive: true
        verbose: true
        quiet: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/build.zip'
        ArtifactName: 'drop'

- stage: DeployToDev
  displayName: 'Deploy to Dev'
  jobs:
  - deployment: Dev
    displayName: 'Deploy to Dev'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - script: echo "Deploying to Staging"
          - script: echo "Deploy commands for Staging environment go here"
          

- stage: DeployToProduction
  displayName: 'Deploy to Production'
  dependsOn: DeployToStaging
  condition: succeeded()
  jobs:
  - deployment: Production
    displayName: 'Deploy to Production'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "Waiting for approval before deploying to Production"
          - download: current
            artifact: drop
          - script: echo "Deploying to Production"
          - script: echo "Deploy commands for Production environment go here"

# Approval Checks

# approvals:
# - stage: DeployToProduction
#   checks:
#   - approval: 
#       requests: 
#       - users:
#         - vikash.indoqubix@gmail.com 
  

